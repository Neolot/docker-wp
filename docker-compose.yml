services:
    db:
        container_name: docker-wp_db
        image: mysql:8.4
        restart: always
        ports:
            - "127.0.0.1:3306:3306"
        volumes:
            - db_data:/var/lib/mysql
            - ./db/init:/docker-entrypoint-initdb.d
        environment:
            MYSQL_ROOT_PASSWORD: 123456
            MYSQL_DATABASE: wordpress
            MYSQL_DEFAULT_AUTH_PLUGIN: mysql_native_password
            MYSQL_INIT_DB_ARGS: "--initialize-insecure"
        command:
            - --character-set-server=utf8mb4
            - --collation-server=utf8mb4_unicode_ci
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
            interval: 5s
            timeout: 5s
            retries: 10
            start_period: 60s

    wp:
        container_name: docker-wp_wp
        build: .
        ports:
            - "127.0.0.1:80:80"
        volumes:
            - type: bind
              source: ./config/php.conf.ini
              target: /usr/local/etc/php/conf.d/conf.ini
            - type: bind
              source: ./project
              target: /var/www/html
        depends_on:
            db:
                condition: service_healthy
        environment:
            DB_NAME: wordpress
            DB_USER: root
            DB_PASSWORD: 123456
            DB_HOST: db
            DB_PREFIX: wp_
            WP_ADMIN: admin
            WP_ADMIN_EMAIL: admin@example.com
            WP_ADMIN_PASSWORD: 123456
            WP_TITLE: Test
            LIVE_URL: https://production.site
            DEV_URL: http://development.local
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost"]
            interval: 10s
            timeout: 5s
            retries: 3
            start_period: 30s

volumes: 
    db_data:
        name: docker-wp_db_data
